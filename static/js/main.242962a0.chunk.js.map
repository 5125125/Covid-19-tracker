{"version":3,"sources":["components/covid.js","components/statewise.js","components/Errorpage.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","exact","activeClassName","to","class","recovered","confirmed","deaths","active","lastupdatedtime","Statewise","map","curElem","ind","state","Errorpage","id","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.242962a0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n//import Statewise from 'src/components/statewise';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Covid = () => {\r\n    \r\n    const [data, setData] = useState([]);\r\n\r\n    const getCovidData = async () => {\r\n        try {\r\n            const res = await fetch('https://api.covid19india.org/data.json');\r\n            const actualData = await res.json();\r\n            console.log(actualData.statewise[0]);\r\n            setData(actualData.statewise[0]);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n      \r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n         getCovidData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <section>\r\n            <h1>ðŸ”´ LIVE</h1>\r\n            <h2>COVID-19 CORONAVIRUS TRACKER</h2>\r\n\r\n            <ul>\r\n                <li className=\"card\">\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name1\"><span> OUR </span> COUNTRY</p>\r\n                            <p className=\"card__total card__small\">INDIA</p>\r\n                         {/*  <NavLink href=\"/statewise\" className=\"button\" >View_Statewise_data </NavLink> */}\r\n                        <NavLink exact activeClassName=\"active-page\" className=\"nav-link\" to=\"/statewise\"><button class=\"button\"><span>View Statewise data </span></button></NavLink>\r\n                         </div>\r\n                    </div>\r\n                    </li>\r\n                    \r\n                     <li className=\"card\">\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span> TOTAL </span>  RECOVERED</p>\r\n                                <p className=\"card__total card__small\">{data.recovered}</p>\r\n                        </div>\r\n                    </div>\r\n                    </li>\r\n                    \r\n                     <li className=\"card\">\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span> TOTAL </span> CONFIRMED</p>\r\n                                <p className=\"card__total card__small\">{ data.confirmed}</p>\r\n                        </div>\r\n                    </div>\r\n                    </li>\r\n                     <li className=\"card\">\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span> TOTAL </span> DEATHS </p>\r\n                                <p className=\"card__total card__small\">{ data.deaths}</p>\r\n                        </div>\r\n                    </div>\r\n                    </li>\r\n                     <li className=\"card\">\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span> TOTAL </span> ACTIVE</p>\r\n                            <p className=\"card__total card__small\">{data.active}</p>\r\n                        </div>\r\n                    </div>\r\n                    </li>\r\n                     <li className=\"card\">\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span> LAST </span> UPDATED</p>\r\n                                <p className=\"card__total card__small\">{data.lastupdatedtime}</p>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Covid;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Statewise = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const getCovidData = async () => {\r\n        const res = await fetch('https://api.covid19india.org/data.json');\r\n        const actualData = await res.json();\r\n        console.log(actualData.statewise);\r\n        setData(actualData.statewise);\r\n    }    \r\n\r\n    useEffect(() => {\r\n        getCovidData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n           \r\n            <div className=\"container-fluid mt-5\">\r\n                <div className=\"main-heading\">\r\n                 <h1 className=\"mb-5 text-center\"> <span className=\"font-weight-bold\"> INDIA </span>COVID-19 Dashboard</h1>\r\n            </div>\r\n\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"thead-dark\"> \r\n                            <tr>\r\n                                <th> State </th>\r\n                                <th> Confirmed </th>\r\n                                <th> recovered </th>  \r\n                                <th> deaths </th>  \r\n                                <th> active </th>  \r\n                                <th> updated </th>  \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            {\r\n                                data.map((curElem, ind) => {\r\n                                    return (\r\n                                        <tr key={ind}>\r\n                                            <th> {curElem.state} </th>\r\n                                            <td> {curElem.confirmed} </td>\r\n                                            <td> {curElem.recovered} </td>  \r\n                                            <td> {curElem.deaths} </td>  \r\n                                            <td> {curElem.active} </td>  \r\n                                            <td> {curElem.lastupdatedtime} </td>  \r\n                                        </tr> \r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            <NavLink to=\"/\"> <button class=\"button\"><span>Back To Previouspage  </span></button></NavLink>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Statewise ;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Errorpage = () => {\r\n    return (\r\n        <>\r\n            <div id=\"notfound\">\r\n                <div className=\"notfound\">\r\n                    <div className=\"notfound-404\">\r\n                        <h1>404</h1>\r\n                    </div>\r\n                    <h2>we are sorry, page not found!</h2>\r\n                    <p className=\"mb-5\"> \r\n                        The page you are looking for might have been removed\r\n                        had its name changed or is temporarily unavailable. \r\n                    </p>\r\n                    <NavLink to=\"/\"> Back To Homepage </NavLink>\r\n                </div>\r\n           </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Errorpage;\r\n","import react from 'react';\nimport './App.css';\nimport Covid from './components/covid';\nimport { Route, Switch } from \"react-router-dom\";\nimport Statewise from \"./components/statewise\";\nimport ErrorPage from \"./components/Errorpage\";\n\n\n\nconst App =() => {\n  return(\n    <>\n    <Switch>\n    <Route exact path = \"/\" component ={Covid}>\n        <Covid />\n      </Route>\n    <Route path=\"/statewise\" component={Statewise}>\n        <Statewise />\n      </Route>\n      <Route exact path = \"/Covid-19-tracker\" component ={Covid}>\n        <Covid />\n      </Route>\n      <Route  >\n        <ErrorPage />\n      </Route>\n    </Switch>\n   </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter >\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}